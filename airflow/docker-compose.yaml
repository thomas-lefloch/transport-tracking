---
x-airflow-common:
  #Permet de créer une variable. Evite de tous repréciser à chaque service
  &airflow-common
  image: apache/airflow
  environment: &airflow-common-env
    AIRFLOW__CORE__LOAD_EXAMPLES: false
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW_CONFIG: /opt/airflow/config/airflow.cfg
    # Le mot de passe de l'utilisateur pour accéder au portail web sera stoké dans ce fichier
    AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_PASSWORDS_FILE: /opt/airflow/config/passwords.json.generated
    # Pas réussi à faire fonctionner Fab auth. semble être ignorer par l'initialisation.
    # AIRFLOW__CORE__AUTH_MANAGER: airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager
    # _AIRFLOW_WWW_USER_CREATE: 'true'
    # _AIRFLOW_WWW_USER_USERNAME: admin
    # _AIRFLOW_WWW_USER_PASSWORD: admin
  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./warehouse:/opt/airflow/warehouse
    - ./exports:/opt/airflow/exports
    - ./config:/opt/airflow/config

services:
  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow version && airflow db migrate"
    environment:
      <<: *airflow-common-env
    depends_on:
      postgres:
        condition: service_healthy
    restart: no

  airflow-standalone:
    <<: *airflow-common

    command: bash -c "pip install duckdb && airflow standalone"
    ports:
      - "8080:8080"
    environment:
      <<: *airflow-common-env
    restart: unless-stopped
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

volumes:
  postgres-data:
