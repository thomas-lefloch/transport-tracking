---
x-airflow-common: &airflow-common
  image: apache/airflow
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__AUTH_MANAGER: airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager

  volumes:
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./warehouse:/opt/airflow/warehouse
    - ./exports:/opt/airflow/exports

services:
  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow version && airflow db migrate && airflow db check-migrations"
    environment:
      <<: *airflow-common-env
    depends_on:
      postgres:
        condition: service_healthy
    restart: no

  airflow-webserver:
    <<: *airflow-common
    command: airflow api-server
    ports:
      - "8080:8080"
    environment:
      <<: *airflow-common-env
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
  depends_on:
    airflow-init:
      condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    environment:
      <<: *airflow-common-env
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-dag-processor:
    <<: *airflow-common
    command: airflow dag-processor
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

volumes:
  postgres-data:
